# .github/workflows/deploy-to-cloud-run.yml
name: Deploy n8n node to Cloud Run

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: shot-dev
  REGION: us-central1
  SERVICE_NAME: n8n-service
  N8N_HOST: n8n.1shotapi.dev
  N8N_PATH: /
  N8N_PORT: 5678
  N8N_EDITOR_BASE_URL: https://n8n.1shotapi.dev
  N8N_WEBHOOK_URL: https://n8n.1shotapi.dev
  N8N_PROTOCOL: https
  N8N_RUNNERS_ENABLED: true
  DB_TYPE: postgresdb
  DB_POSTGRESDB_DATABASE: n8n
  DB_POSTGRESDB_USER: n8n-db
  DB_POSTGRESDB_PASSWORD: ${{ secrets.DB_POSTGRESDB_PASSWORD }}
  DB_POSTGRESDB_PORT: 5432
  DB_POSTGRESDB_SCHEMA: public
  N8N_USER_FOLDER: /home/node/.n8n
  GENERIC_TIMEZONE: UTC
  EXECUTIONS_PROCESS: main
  EXECUTIONS_MODE: regular
  QUEUE_HEALTH_CHECK_ACTIVE: true
  N8N_COMMUNITY_PACKAGES_ENABLED: true
  N8N_SERVICE_ACCOUNT: n8n-service-account@shot-dev.iam.gserviceaccount.com
  BUCKET_NAME: n8n-1shot-plugins

jobs:
  build-and-deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - name: "Set up Cloud SDK"
      uses: google-github-actions/setup-gcloud@v1
    - id: "auth"
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_DEPLOYER_CREDENTIALS }}

    - name: Authenticate Docker with GCP
      run: gcloud --quiet auth configure-docker us-central1-docker.pkg.dev

    - name: Deploy to Cloud Run
      run: |
        export SQL_CONNECTION=$(gcloud sql instances describe n8n --format="value(connectionName)")
        IMAGE_URI=us-central1-docker.pkg.dev/shot-dev/n8n-docker-registry/n8nio/n8n
        # Deploy to Cloud Run
        gcloud run deploy n8n \
          --image=$IMAGE_URI\
          --platform=managed \
          --region=$REGION \
          --allow-unauthenticated \
          --port=5678 \
          --cpu=1 \
          --memory=2Gi \
          --min-instances=0 \
          --max-instances=1 \
          --set-env-vars=N8N_HOST=$N8N_HOST,N8N_PATH=$N8N_PATH,N8N_PORT=$N8N_PORT,N8N_EDITOR_BASE_URL=$N8N_EDITOR_BASE_URL,N8N_WEBHOOK_URL=$N8N_WEBHOOK_URL,N8N_PROTOCOL=$N8N_PROTOCOL,N8N_RUNNERS_ENABLED=$N8N_RUNNERS_ENABLED,DB_TYPE=$DB_TYPE,DB_POSTGRESDB_DATABASE=$DB_POSTGRESDB_DATABASE,DB_POSTGRESDB_USER=$DB_POSTGRESDB_USER,DB_POSTGRESDB_HOST=/cloudsql/$SQL_CONNECTION,DB_POSTGRESDB_PORT=$DB_POSTGRESDB_PORT,DB_POSTGRESDB_SCHEMA=$DB_POSTGRESDB_SCHEMA,N8N_USER_FOLDER=$N8N_USER_FOLDER,EXECUTIONS_PROCESS=$EXECUTIONS_PROCESS,EXECUTIONS_MODE=$EXECUTIONS_MODE,GENERIC_TIMEZONE=$GENERIC_TIMEZONE,QUEUE_HEALTH_CHECK_ACTIVE=$QUEUE_HEALTH_CHECK_ACTIVE,DB_POSTGRESDB_PASSWORD="$DB_POSTGRESDB_PASSWORD" \
          --add-cloudsql-instances=$SQL_CONNECTION \
          --service-account=$N8N_SERVICE_ACCOUNT \
          --add-volume name=n8n-bucket,type=cloud-storage,bucket=$BUCKET_NAME \
          --add-volume-mount volume=n8n-bucket,mount-path=/home/node/.n8n
